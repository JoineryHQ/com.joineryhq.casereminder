<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from casereminder/xml/schema/CRM/Casereminder/CaseReminderType.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:8ece7262071f707a16f90dbfb3de0da0)
 */
use CRM_Casereminder_ExtensionUtil as E;

/**
 * Database access object for the CaseReminderType entity.
 */
class CRM_Casereminder_DAO_CaseReminderType extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_case_reminder_type';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique CaseReminderType ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Case Type
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $case_type_id;

  /**
   * Case status ID(s), multi-value delimited. Implicit FK to civicrm_option_value where option_group = case_status.
   *
   * @var string|null
   *   (SQL type: varchar(256))
   *   Note that values will be retrieved from the database as a string.
   */
  public $case_status_id;

  /**
   * FK to civicrm_msg_template
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $msg_template_id;

  /**
   * Relationship type ID(s) for recipients, multi-value delimited. Implicit FK to civicrm_relationship_type. -1 is Case Contact.
   *
   * @var string|null
   *   (SQL type: varchar(256))
   *   Note that values will be retrieved from the database as a string.
   */
  public $recipient_relationship_type_id;

  /**
   * Email address selected from domain list of From addresses.
   *
   * @var string|null
   *   (SQL type: varchar(256))
   *   Note that values will be retrieved from the database as a string.
   */
  public $from_email_address;

  /**
   * Subject of reminder email
   *
   * @var string|null
   *   (SQL type: varchar(128))
   *   Note that values will be retrieved from the database as a string.
   */
  public $subject;

  /**
   * Day of week to send reminders
   *
   * @var string|null
   *   (SQL type: varchar(64))
   *   Note that values will be retrieved from the database as a string.
   */
  public $dow;

  /**
   * Maximum number of times to send a reminder of this type on any given case.
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $max_iterations;

  /**
   * Is this reminder type active?
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_active;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_case_reminder_type';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Case Reminder Types') : E::ts('Case Reminder Type');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'case_type_id', 'civicrm_case_type', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'msg_template_id', 'civicrm_msg_template', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique CaseReminderType ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.id',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'case_type_id' => [
          'name' => 'case_type_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Case Type ID'),
          'description' => E::ts('FK to Case Type'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.case_type_id',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'FKClassName' => 'CRM_Case_DAO_CaseType',
          'add' => NULL,
        ],
        'case_status_id' => [
          'name' => 'case_status_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Case Status ID'),
          'description' => E::ts('Case status ID(s), multi-value delimited. Implicit FK to civicrm_option_value where option_group = case_status.'),
          'maxlength' => 256,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.case_status_id',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
        'msg_template_id' => [
          'name' => 'msg_template_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Msg Template ID'),
          'description' => E::ts('FK to civicrm_msg_template'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.msg_template_id',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'FKClassName' => 'CRM_Core_DAO_MessageTemplate',
          'add' => NULL,
        ],
        'recipient_relationship_type_id' => [
          'name' => 'recipient_relationship_type_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Recipient Relationship Type ID'),
          'description' => E::ts('Relationship type ID(s) for recipients, multi-value delimited. Implicit FK to civicrm_relationship_type. -1 is Case Contact.'),
          'maxlength' => 256,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.recipient_relationship_type_id',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
        'from_email_address' => [
          'name' => 'from_email_address',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('From Email Address'),
          'description' => E::ts('Email address selected from domain list of From addresses.'),
          'maxlength' => 256,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.from_email_address',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
        'subject' => [
          'name' => 'subject',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Subject'),
          'description' => E::ts('Subject of reminder email'),
          'maxlength' => 128,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.subject',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
        'dow' => [
          'name' => 'dow',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Dow'),
          'description' => E::ts('Day of week to send reminders'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.dow',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
        'max_iterations' => [
          'name' => 'max_iterations',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Max Iterations'),
          'description' => E::ts('Maximum number of times to send a reminder of this type on any given case.'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.max_iterations',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Enabled'),
          'description' => E::ts('Is this reminder type active?'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_case_reminder_type.is_active',
          'table_name' => 'civicrm_case_reminder_type',
          'entity' => 'CaseReminderType',
          'bao' => 'CRM_Casereminder_DAO_CaseReminderType',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'case_reminder_type', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'case_reminder_type', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
